Side code project:
    Code analysis:

        -do the TODO's
        -make compiling the source with javassaist my problem not the users
        -graph data in a pie graph
            -time and calls
                -make 2 graphs
        -see if you can get garbage collecting stats
        -needs to have glossary where it explains certain things
            -what exactly overhead is
        -investigate the time issue when all method calls are allowed
        -in millisecond and second the format of the number should be shorter
        - i think average call should be completely redone and named average time per call / make the numbers reflect the name
        - i think the timing everywhere could be redone smarter to account for any number of posibilities
            -threading

        General:

            make easier to use on other projects for profiling
                write down process of making the project able to be profiled / try to whitle this down all i can so the process is very small

            make time type an enum

            on close save settings

            Index out program so it can refer to other classes:
                -each class has its own object containing all its stats

            make multithreaded:
                create a thread for each file / directory whichever is faster:
                    unless performance isn't an issue

            be able to save results
                -think about whether it should automatically save the results to disk though
                    -leaning towards no

        Dynamic:
            if theres an error a popup box with only the abilty to close it should come up and display the error message
